---
name: Reusable unit test Workflow
on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      targets:
        required: false
        type: string
        default: "['linux-unit-test-1-cpu','linux-unit-test-2-cpu','linux-unit-test-4-cpu']"
permissions: read-all

jobs:
  test-linux:
    # this is to prevent arm64 jobs from running at forked projects
    if: ${{ github.repository == 'etcd-io/bbolt' || inputs.runs-on == 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(inputs.targets) }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - id: goversion
        run: echo "goversion=$(cat .go-version)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: ${{ steps.goversion.outputs.goversion }}
      - run: make fmt
      - env:
          TARGET: ${{ matrix.target }}
        run: |
          case "${TARGET}" in
            linux-unit-test-1-cpu)
              CPU=1 make test
              ;;
            linux-unit-test-2-cpu)
              CPU=2 make test
              ;;
            linux-unit-test-4-cpu)
              CPU=4 make test
              ;;
            linux-unit-test-4-cpu-race)
              CPU=4 ENABLE_RACE=true make test
              ;;
            *)
              echo "Failed to find target"
              exit 1
              ;;
          esac
      - name: golangci-lint
        uses: golangci/golangci-lint-action@aaa42aa0628b4ae2578232a66b541047968fac86 # v6.1.0
